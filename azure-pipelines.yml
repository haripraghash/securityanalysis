# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
trigger:
  - master

variables:
  - group: azuresubscription
  - name: buildConfiguration
    value: 'Release'
  - name:  dotnetSdkVersion
    value: '3.1.101'

stages:
- stage: dev
  displayName: Dev
  variables:
    ENV: "dev"
    REGION: "eastus"
  pool:
   vmImage: 'ubuntu-latest'
  jobs:
  # - job: provisionazureinfrastructure
  #   displayName: "Provision Azure Infrastructure"
    
  #   steps:
  #   - task: AzurePowerShell@4
  #     name: deployazureinfra
  #     displayName: "Run powershell script to provision azure infra"
  #     inputs:
  #       azureSubscription: "securityanalysis"
  #       azurePowerShellVersion: LatestVersion
  #       scriptPath: ./acme.product.api.provisioning/deploy-productapi.ps1 
  #       errorActionPreference: stop
  #       failOnStandardError: true
  #       scriptArguments: -AadAdmin $(aadAdmin) -AadPassword (ConvertTo-SecureString $(aadPassword) -AsPlainText -Force) -ResourceGroupLocation $(REGION)  -environment $(ENV)
  - job: deployazuresqlschema
    displayName: "Deploy Azure Sql Schema"
    #dependsOn: provisionazureinfrastructure
    #condition: succeeded()
    variables:
      sqlServerName: 'acmeproducteundevsql.database.windows.net'
      sqlServerDbName: 'productdb'
      sqlServerUserName: 'productadmin'
      sqlServerPassword: 'test'
      # sqlServerName: $[ dependencies.provisionazureinfrastructure.outputs['deployazureinfra.SqlServerName'] ]
      # sqlServerDbName: $[ dependencies.provisionazureinfrastructure.outputs['deployazureinfra.SqlServerDbName'] ]
      # sqlServerUserName: $[ dependencies.provisionazureinfrastructure.outputs['deployazureinfra.SqlServerAppAdminLogin'] ]
      # sqlServerPassword: $[ dependencies.provisionazureinfrastructure.outputs['deployazureinfra.SqlServerAppAdminLoginPassword'] ]
    pool:
      vmImage: windows-latest
    steps:
    - task: DotNetCoreInstaller@0
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        packageType: sdk
        version: $(dotnetSdkVersion)
    - task: DotNetCoreCLI@2
      displayName: 'Restore'
      inputs:
         command: restore

    - task: VSBuild@1
      displayName: Build Solution
      inputs:
        solution: '**\*.sln' 
        vsVersion: 'latest'
        msbuildArgs: '/t:Clean,Build /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\webapps"'          
        configuration: $(BuildConfiguration)
                  
    # - task: DotNetCoreCLI@2
    #   displayName: 'dotnet publish with $(buildConfiguration) configuration'
    #   inputs:
    #    command: publish
    #    publishWebProjects: false
    #    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/webapps'
    #    zipAfterPublish: false
    #    modifyOutputPath: true
       
    - task: CopyFiles@2
      displayName: Copy dacpac to artifacts
      inputs:
        SourceFolder: acme.product.database
        Contents: |
           bin/$(BuildConfiguration)/acme.product.database.dacpac
        TargetFolder: '$(build.artifactstagingdirectory)/datamodel'
        flattenFolders: true
    - task: Bash@3
      displayName: "List contents"
      inputs:
        script: |
          cd $(build.artifactstagingdirectory)/datamodel 
          ll

    - task: SqlAzureDacpacDeployment@1
      displayName: "Deploy Azure Sql Database Schema"
      condition: 
      inputs:
        azureSubscription: "securityanalysis"
        serverName: "$(sqlServerName).database.windows.net"
        databaseName: $(sqlServerDbName)
        sqlUsername: $(sqlServerUserName)
        sqlPassword: $(sqlServerPassword)
        deploymentAction: 'Publish'
        dacpacFile: $(build.artifactstagingdirectory)/datamodel/acme.product.database.dacpac
          

  
  


# steps:
# - task: DotNetCoreCLI@2
#   displayName: Restore nuget
#   inputs:
#     command: 'restore'
#     projects: '**/*.csproj'

# - task: VSBuild@1
#   displayName: Build Solution
#   inputs:
#     solution: '**\*.sln' 
#     #vsVersion: 'latest' # Optional. Options: latest, 16.0, 15.0, 14.0, 12.0, 11.0
#     msbuildArgs: '/t:Clean,Build /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\webapps"'
#     #platform: # Optional
#     configuration: $(BuildConfiguration)
#     #clean: false # Optional
#     #maximumCpuCount: false # Optional
#     #restoreNugetPackages: false # Optional
#     #msbuildArchitecture: 'x86' # Optional. Options: x86, x64
#     #logProjectEvents: true # Optional
#     #createLogFile: false # Optional
#     #logFileVerbosity: 'normal' # Optional. Options: quiet, minimal, normal, detailed, diagnostic

# # - task: DotNetCoreCLI@2
# #   displayName: 'dotnet publish $(buildConfiguration)'
# #   inputs:
# #     command: publish
# #     publishWebProjects: false
# #     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\webapps'
# #     zipAfterPublish: True
# - task: CopyFiles@2
#   displayName: Copy dacpac to artifacts
#   inputs:
#     SourceFolder: acme.product.database
#     Contents: |
#      bin\$(BuildConfiguration)\acme.product.database.dacpac
#     TargetFolder: '$(build.artifactstagingdirectory)\datamodel'
#     flattenFolders: true

# - task: CopyFiles@2
#   displayName: Copy provisioning scripts
#   inputs:
#     SourceFolder: acme.product.api.provisioning
#     TargetFolder: '$(build.artifactstagingdirectory)/iac'

# - task: PublishBuildArtifacts@1
#   displayName: Publish infrastructure artifacts
#   inputs:
#     PathtoPublish: '$(build.artifactstagingdirectory)/iac'
#     ArtifactName: iac


# - task: PublishBuildArtifacts@1
#   displayName: 'publish .net core artifacts'
#   inputs:
#     PathtoPublish: '$(build.artifactstagingdirectory)'
